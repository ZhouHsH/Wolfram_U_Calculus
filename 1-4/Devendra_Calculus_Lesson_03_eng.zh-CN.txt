1
00:00:00,000 --> 00:00:06,000
您好，欢迎来到Wolfram U的微积分入门课程第3课。

2
00:00:06,000 --> 00:00:15,000
今天我们的主题是基本功能。让我们从今天课程的简要概述开始。

3
00:00:15,000 --> 00:00:23,000
在上一课第2课中，我们学习了如何使用函数来表示变更，

4
00:00:23,000 --> 00:00:29,000
我们学习了如何定义函数，对其进行绘制，对其进行评估等等，然后我们还了解到

5
00:00:29,000 --> 00:00:35,000
有许多不同种类的功能。令人困惑的是，您可能会看到的功能数量

6
00:00:35,000 --> 00:00:41,000
在任何时候。这是这里的一些图表。假设这是一种振荡功能，

7
00:00:41,000 --> 00:00:45,000
并且您可能具有递增函数或递减函数，而问题是

8
00:00:45,000 --> 00:00:52,000
在本课程中，您真正需要学习微积分什么？好吧，在本课程中，我们要做的是

9
00:00:52,000 --> 00:00:58,000
我们将对您稍后在课程中真正遇到的功能的类型进行分类。

10
00:00:58,000 --> 00:01:03,000
这些功能比您在高级数学中可能遇到的功能要简单一些，

11
00:01:03,000 --> 00:01:09,000
因此，它们被称为基本函数，而不是特殊函数。

12
00:01:09,000 --> 00:01:15,000
今天我们的主题是基本功能，我们将对其进行详细研究。

13
00:01:15,000 --> 00:01:24,000
也许最简单的函数是线性函数。例如，这是一个函数

14
00:01:24,000 --> 00:01:36,000
<i>f</i> [ <i>x</i> ] = <i>x</i> + 3，如果绘制它，您会看到一条直线。那是线性函数

15
00:01:36,000 --> 00:01:45,000
通常，函数<i>f</i> [ <i>x</i> ] = <i>mx</i> + <i>b</i>称为线性函数，并且那里的<i>m</i>是斜率

16
00:01:45,000 --> 00:01:52,000
和<i>b</i>是<i>ÿ</i>截距。线性函数非常简单。他们的图是直线，

17
00:01:52,000 --> 00:01:58,000
他们有一个斜率和<i>y</i>轴截距，仅此而已。

18
00:01:59,000 --> 00:02:07,000
好的。为了更进一步，让我们讨论幂函数。幂函数也非常简单。

19
00:02:07,000 --> 00:02:13,000
它的幂<i>为</i> a的形式为<i>x</i>。这是简单电源的一些电源功能<i><font style="vertical-align: inherit;"></font></i><font style="vertical-align: inherit;"></font>

20
00:02:13,000 --> 00:02:23,000
像1和2以及3和4。让我们绘制它们，您会发现图形取决于

21
00:02:23,000 --> 00:02:30,000
您拥有的那种力量。如果您具有奇数度或奇数幂函数，

22
00:02:30,000 --> 00:02:41,000
那么这些图很奇怪。例如，<i>x</i>的图是奇数，而<i>x</i> ^ 2 的图是偶数。

23
00:02:41,000 --> 00:02:47,000
这些幂函数在奇数阶函数是奇数的意义上很简单

24
00:02:47,000 --> 00:02:54,000
偶数次函数是偶数 现在比根函数要难一些，

25
00:02:54,000 --> 00:03:01,000
这里有<i>x</i> ^（1/2）之类的东西，基本上就是平方根函数。那只是一个简单的方法

26
00:03:01,000 --> 00:03:07,000
这只是用Wolfram语言说x ^（1/3）的简单方法。这些功能是

27
00:03:07,000 --> 00:03:14,000
比之前的设置要复杂一些，因为现在发生的情况是，如果您查看这些图，

28
00:03:14,000 --> 00:03:22,000
他们在这里看起来比那儿要厚。那是因为到处都定义了奇数根

29
00:03:22,000 --> 00:03:30,000
而偶数仅针对变量的正（或非负）值定义。

30
00:03:30,000 --> 00:03:35,000
这是平方根函数，仅定义数字的平方根

31
00:03:35,000 --> 00:03:45,000
如果数字为非负数。这是幂函数的类别，在实践中非常有用。

32
00:03:45,000 --> 00:03:54,000
为了更进一步，让我们谈谈多项式。那边的函数<i>f</i>是一个多项式。

33
00:03:54,000 --> 00:04:04,000
现在，如果您绘制多项式，则会得到一个图形。这是一个很好的平滑图形，通常来说

34
00:04:04,000 --> 00:04:09,000
如果要查找多项式，则需要设置此类型的总和。在<i>一个</i>的在这里

35
00:04:09,000 --> 00:04:18,000
是系数，而幂恰好在那— <i>n</i>，<i>n -1</i>等。

36
00:04:18,000 --> 00:04:24,000
最高次幂称为多项式的次数。这个多项式

37
00:04:24,000 --> 00:04:36,000
的系数为3，-1、7和6，而度数为4，因为那边有<i>x</i> ^ 4。

38
00:04:36,000 --> 00:04:43,000
特别是，线性函数的阶数为1，二次函数的阶数为2

39
00:04:43,000 --> 00:04:50,000
和三次函数的阶数为3。您拥有大量的多项式。

40
00:04:50,000 --> 00:04:56,000
它们使用起来非常简单，但是却非常有用。您具有线性，二次方，

41
00:04:56,000 --> 00:05:01,000
三次多项式等，我们在课程中一直遇到。

42
00:05:02,000 --> 00:05:09,000
好的。要更进一步，我们可以讨论有理函数。有理函数是

43
00:05:09,000 --> 00:05:14,000
只是两个多项式的商，即两个多项式之比。

44
00:05:14,000 --> 00:05:20,000
如果将多项式除以另一个，则会得到有理函数。也许是最简单的一种

45
00:05:20,000 --> 00:05:24,000
有理函数的倒数是倒数函数，即1 / <i>x</i>。如果把它画出来

46
00:05:24,000 --> 00:05:32,000
您会看到该图有两个部分，这是因为<i>x</i> = 0时存在问题

47
00:05:32,000 --> 00:05:39,000
函数未定义的地方。你右边有一块，左边有一块，

48
00:05:39,000 --> 00:05:43,000
它们共同为您提供互惠的功能。一般而言，有理函数

49
00:05:43,000 --> 00:05:51,000
除分母为零的地方外，所有地方都定义了。每当这里的函数<i>q</i>为零时

50
00:05:51,000 --> 00:05:57,000
您会发现存在问题并且没有定义有理函数。但是除此之外

51
00:05:57,000 --> 00:06:02,000
它们使用起来非常简单，并且再次在微积分中非常有用。

52
00:06:04,000 --> 00:06:09,000
好的。让我们更进一步，讨论代数函数。代数函数

53
00:06:09,000 --> 00:06:15,000
是通过加，减，乘，除或取根获得的，

54
00:06:15,000 --> 00:06:19,000
当然那是所有麻烦的根源，因为当您扎根时，您可以拥有

55
00:06:19,000 --> 00:06:24,000
您可能会出错。这是一个非常复杂的代数函数。

56
00:06:24,000 --> 00:06:30,000
它里面有平方根，立方根等等，如果绘制它，可能会有问题。

57
00:06:30,000 --> 00:06:36,000
由于分母，这里的问题为零，然后该函数可能

58
00:06:36,000 --> 00:06:41,000
没有在某些部分上定义，因此该域通常很小，

59
00:06:41,000 --> 00:06:46,000
这些代数函数具有多种形式。虽然很有趣

60
00:06:46,000 --> 00:06:52,000
它们不太容易使用，一开始我们可能不会使用太多。

61
00:06:52,000 --> 00:06:57,000
好的。除了代数函数，我们还有三角函数，当然

62
00:06:57,000 --> 00:07:03,000
你们中的许多人可能都熟悉。正弦，余弦和切线函数为

63
00:07:03,000 --> 00:07:08,000
三角函数。现在，仅需警告。在Wolfram语言中，

64
00:07:08,000 --> 00:07:18,000
我们总是使用弧度测量。如果我说Sin [30]，那不是很好。你不得不说罪[π/ 6]

65
00:07:18,000 --> 00:07:22,000
或Sin [30度]，当您确实想要30度的正弦时。那你当然会

66
00:07:22,000 --> 00:07:26,000
然后，您当然会得到正确的行为。那是因为你用了1/2

67
00:07:26,000 --> 00:07:33,000
正确的符号和正确的单位。请记住，您必须始终使用弧度测量

68
00:07:33,000 --> 00:07:38,000
在使用Wolfram语言工作时，否则您必须像我在这里所做的那样说学位。

69
00:07:38,000 --> 00:07:44,000
这是触发函数的前三个图：正弦，余弦和切线。

70
00:07:45,000 --> 00:07:52,000
好的。您会看到它们都在振荡，正弦和余弦。然后切线函数

71
00:07:52,000 --> 00:08:00,000
之所以有这些相似之处，是因为这是您遇到的问题：当您除以零时，

72
00:08:00,000 --> 00:08:06,000
余弦函数为零，等等。好的。这些是正弦，余弦和切线函数，

73
00:08:06,000 --> 00:08:13,000
正弦和余弦的周期为2π，而切线的周期仅为π。

74
00:08:13,000 --> 00:08:19,000
它们是重复的并且有周期，但是这些周期取决于功能的种类

75
00:08:19,000 --> 00:08:23,000
您正在与。当然，您可能会有Sin [2 <i>x</i> ]，Sin [3 <i>x</i> ]等

76
00:08:23,000 --> 00:08:27,000
以获得越来越快的振荡。

77
00:08:29,000 --> 00:08:35,000
好的。现在，如果您取三角函数的倒数，那么您将得到

78
00:08:35,000 --> 00:08:41,000
割线，割线和切线，这是倒数的三角函数。

79
00:08:41,000 --> 00:08:53,000
这是他们的图表。您在这里看到的是互惠图就在那边，并且

80
00:08:53,000 --> 00:08:59,000
问题在于，无论何时相应的trig函数为0，都不会定义它们。

81
00:08:59,000 --> 00:09:06,000
例如，如果正弦在某个点上恰好为零，则未定义余割，等等，

82
00:09:06,000 --> 00:09:13,000
因此这些函数中存在一些差距，这些差距反映了基础三角函数的零。

83
00:09:13,000 --> 00:09:19,000
但是就割线和割线具有的意义而言，它们也与三角函数相似。

84
00:09:19,000 --> 00:09:23,000
周期为2π，而余切线为π。

85
00:09:23,000 --> 00:09:29,000
这些功能在微积分的某些部分中非常有用。

86
00:09:29,000 --> 00:09:34,000
好的。更进一步，我们现在可以讨论指数函数，

87
00:09:34,000 --> 00:09:40,000
它们的形式<i>是</i>提高到<i>x</i>的幂，所以现在指数是可变的。

88
00:09:40,000 --> 00:09:48,000
举例来说，如果我们看2 ^ <i>x，</i>即底数<i>a</i>大于1的情况，

89
00:09:48,000 --> 00:09:55,000
那么您就有了指数增长函数。这是一个情节，您可以很清楚地看到

90
00:09:55,000 --> 00:10:02,000
增长非常快。另一方面，如果您采用介于0和1之间的数字（如0.5），

91
00:10:02,000 --> 00:10:08,000
那么你得到一个递减函数。但是无论如何，这些功能总是通过

92
00:10:08,000 --> 00:10:17,000
点（0,1），因为<i>一个</i> ^ 0 = 1，大家都知道，从您的代数指数的研究。

93
00:10:18,000 --> 00:10:27,000
指数函数对于一方面捕获增长而另一方面捕获衰减非常有用。

94
00:10:27,000 --> 00:10:32,000
像我们的人口这样的事情可能会成倍增长，而某些其他事情

95
00:10:32,000 --> 00:10:38,000
可能会呈指数衰减，但是在一起，不同类型的指数函数会给您

96
00:10:38,000 --> 00:10:42,000
表达微积分增长或衰减速率的一种有效方法。

97
00:10:42,000 --> 00:10:46,000
它们非常重要，您应该非常了解它们。

98
00:10:47,000 --> 00:10:56,000
最后，我们将讨论对数函数，这些函数定义为基于<i>a的</i> log [ <i>x</i> ] ，<i><font style="vertical-align: inherit;"></font></i><font style="vertical-align: inherit;"></font>

99
00:10:56,000 --> 00:11:04,000
它们是指数函数的逆函数。这是Log [ <i>x</i> ] 的图形。

100
00:11:04,000 --> 00:11:09,000
请记住，在Wolfram语言中，基数设置为<i>e</i>，

101
00:11:09,000 --> 00:11:16,000
但是如果您想使用其他基准，那么您可以在这里说，然后返回Log [ <i>x</i> ]，

102
00:11:16,000 --> 00:11:23,000
但现在降至基数1/4。在某种意义上，它们与指数函数非常相似

103
00:11:23,000 --> 00:11:29,000
因为它们实际上是相反的。对数函数非常有用，但是如您所见，

104
00:11:29,000 --> 00:11:35,000
它们的增长比指数慢得多，并且它们有自己的用途。

105
00:11:35,000 --> 00:11:42,000
好的。我们讨论了各种各样的基本功能，

106
00:11:42,000 --> 00:11:47,000
并总结今天的课程，我们有许多不同形式的功能

107
00:11:47,000 --> 00:11:52,000
以及今天研究的许多不同种类的图。你可以有线性函数，

108
00:11:52,000 --> 00:12:01,000
多项式函数，有理函数，trig函数等，以及它们一起已经需要

109
00:12:01,000 --> 00:12:05,000
大部分时间用于学习微积分。

110
00:12:05,000 --> 00:12:11,000
好的。今天的课程基本上已经完成。在下一课中，我们将介绍限制，

111
00:12:11,000 --> 00:12:17,000
因此，您下次真的可以在本课程中开始进行微积分了。但是在那之前

112
00:12:17,000 --> 00:12:23,000
请在提供给您的笔记本上查看今天的课程，查看随附的练习，

113
00:12:23,000 --> 00:12:28,000
去他们。您只能边做边学数学，因此花一些时间进行复习，

114
00:12:28,000 --> 00:12:34,000
解决练习等等，您应该身体状况良好，下次参加第4课。

115
00:12:34,000 --> 00:12:39,000
非常感谢你。希望您喜欢今天的课程。下次见。

