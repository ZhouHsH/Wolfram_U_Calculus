1
00:00:00,000 --> 00:00:03,000
Hello, and welcome to Lesson 36
你好 欢迎来到Wolfram U的微积分入门课程第36课

2
00:00:03,000 --> 00:00:07,000
of this introduction to calculus with Wolfram U.
你好 欢迎来到Wolfram U的微积分入门课程第36课

3
00:00:07,000 --> 00:00:13,000
The topic for this lesson is slope fields and Euler’s method.
本节课的主题是斜率场和欧拉法

4
00:00:13,000 --> 00:00:17,000
Let’s begin with a brief overview of the lesson.
让我们从本课的简单概览开始

5
00:00:17,000 --> 00:00:20,000
The fact is that some differential equations
事实上 一些微分方程

6
00:00:20,000 --> 00:00:23,000
are very difficult to solve by hand.
是很难手算解决的

7
00:00:23,000 --> 00:00:28,000
For example, here’s a differential equation that looks quite simple,
例如 这里有一个看起来很简单的微分方程

8
00:00:28,000 --> 00:00:34,000
<i>y</i>'[<i>x</i>] = <i>y</i>[<i>x</i>]^2 – <i>x</i>, and you want to solve it
<i>y</i>'[<i>x</i>]=<i>y</i>[<i>x</i>]^2 - <i>x</i> 边界条件是

9
00:00:34,000 --> 00:00:39,000
with the condition that when <i>x</i> = 1, then <i>y</i> = 0.
当<i>x</i>=1时 则<i>y</i>=0

10
00:00:39,000 --> 00:00:44,000
Now the function DSolve can certainly solve this equation,
函数DSolve 可以解这个方程

11
00:00:44,000 --> 00:00:46,000
but the solution is huge
但是解非常复杂

12
00:00:46,000 --> 00:00:49,000
and involves these so-called Bessel functions,
并包含这些 所谓的 贝塞尔函数

13
00:00:49,000 --> 00:00:53,000
which occur in the oscillations of membranes and elsewhere.
这在膜的振荡和其他一些地方相当常见

14
00:00:53,000 --> 00:00:57,000
In such cases, it is much easier to just visualize
这时候 将之可视化 就会轻松很多

15
00:00:57,000 --> 00:01:01,000
what the solution to the curve looks like for any initial value.
你可以观察对于给定初始值 解得的曲线是什么样子的

16
00:01:01,000 --> 00:01:05,000
In this lesson, we’ll learn how to use slope fields
本课我们将学习如何使用斜率场

17
00:01:05,000 --> 00:01:09,000
to see the behavior of such differential equations.
来观察此类微分方程的行为

18
00:01:11,000 --> 00:01:13,000
As an introduction to slope fields,
首先介绍一下斜率场

19
00:01:13,000 --> 00:01:18,000
let’s consider the differential equation <i>y</I>'[<i>x</i>] = <i>f</i>[<i>x</I>, <i>y</i>].
考虑微分方程<i>y</I>'[<i>x</i>]=<i>f</i>[<i>x</I> <i>y</i>]

20
00:01:18,000 --> 00:01:22,000
If you want to find the slope field for this equation,
要得到这个方程的斜率场

21
00:01:22,000 --> 00:01:24,000
what you do is you plug in the values for <i>x</i> and <i>y</i>
要做的是带入<i>x</i>和<i>y</i>的值

22
00:01:24,000 --> 00:01:30,000
in the function <i>f</i> and then plot the slope at that point.
函数<i>f</i>中 然后绘制该点的斜率

23
00:01:30,000 --> 00:01:31,000
What does that mean?
这是什么意思？

24
00:01:31,000 --> 00:01:34,000
It means that you draw a small line segment
意思是说 你画一条小线段

25
00:01:34,000 --> 00:01:40,000
with slope close to the value you get from the expression <i>f</I>[<i>x</i>, <i>y</i>].
并且使得线段的斜率接近于<i>f</I>[<i>x</i> <i>y</i>]

26
00:01:40,000 --> 00:01:44,000
Then you get a slope field, which gives you a very general picture
最终会得到斜率场 他能给你一个总体的 图像的

27
00:01:44,000 --> 00:01:47,000
of the solutions to the differential equation.
的微分方程的解

28
00:01:47,000 --> 00:01:49,000
It’s not very precise, but it’s good enough.
不是很精确 但足够了

29
00:01:49,000 --> 00:01:53,000
Luckily we have two functions in the Wolfram Language.
幸运的是 在Wolfram语言中我们有两个函数

30
00:01:53,000 --> 00:01:58,000
There’s StreamPlot and VectorPlot, which can be used for this purpose.
StreamPlot和VectorPlot 可以用来做这个

31
00:01:58,000 --> 00:02:02,000
For example, let’s go back to the earlier differential equation,
我们回到前面的微分方程

32
00:02:02,000 --> 00:02:10,000
and you can use VectorPlot by saying {1, <i>f</I>[<i>x</i>, y]} over here,
你可以用VectorPlot {1 <i>f</I>[<i>x</i> y]}在这里

33
00:02:10,000 --> 00:02:13,000
or StreamPlot with the same kind of specification,
或者StreamPlot 它具有相同的用法

34
00:02:13,000 --> 00:02:16,000
and you get back the vector field,
你就可以得到矢量场

35
00:02:16,000 --> 00:02:20,000
the slope field over here and the stream field over there.
这里是斜率场 这里是流场

36
00:02:20,000 --> 00:02:22,000
The stream field has a solution of curves
流场是曲线的解

37
00:02:22,000 --> 00:02:25,000
instead of just the arrows like over here.
不像这里一样只是箭头

38
00:02:26,000 --> 00:02:28,000
Now in some cases, what we really want
在某些情况下 我们真正想要的是

39
00:02:28,000 --> 00:02:32,000
are the particular solutions to a differential equation.
微分方程的特解

40
00:02:32,000 --> 00:02:36,000
For example, in the first case for our introduction,
例如 在我们介绍的第一个案例中

41
00:02:36,000 --> 00:02:41,000
we had the differential equation with the initial value <i>y</i>[1] = 0.
我们有初始值为<i>y</i>[1]=0的微分方程

42
00:02:41,000 --> 00:02:46,000
To find that out, you can use the StreamPoints option like over here
要做到这一点 你可以使用StreamPoints选项 比如这样

43
00:02:46,000 --> 00:02:50,000
and get the particular solution curve
来得到特定的解曲线

44
00:02:50,000 --> 00:02:55,000
on the vector plot or on the stream plot.
在向量图或流线图上

45
00:02:57,000 --> 00:02:58,000
A couple more examples.
再举几个例子

46
00:02:58,000 --> 00:03:04,000
Here is the vector field for <i>x</I> – <i>y</i>, the stream plot.
这里是<i>x</I>-<i>y</i>的向量场 还有流线图

47
00:03:04,000 --> 00:03:07,000
You see over here that when <i>x</i> is very large,
注意这里 当<i>x</i>很大的时候

48
00:03:07,000 --> 00:03:11,000
then you have a positive slope from the expression over here.
那么从这边的表达式可以知道 斜率为正

49
00:03:11,000 --> 00:03:14,000
When <i>y</i> is very large, you have a negative slope.
当<i>y</i>非常大时 斜率为负

50
00:03:14,000 --> 00:03:18,000
The same thing can be worked out with VectorPlot over here
同样的事情也可以用VectorPlot来解决 这里

51
00:03:18,000 --> 00:03:23,000
with the initial value <i>y</i>[0] = 0.
是初始值<i>y</i>[0]=0的情况

52
00:03:24,000 --> 00:03:27,000
Okay. Another example.
好吧 再来一个例子

53
00:03:27,000 --> 00:03:29,000
Let’s take <i>f</i> to be <i>x</i> * <i>y</i>.
我们取<i>f</i>为<i>x</i>*<i>y</i>

54
00:03:29,000 --> 00:03:32,000
Now what happens over here is the stream plot
现在这里展现的是流线图的形态

55
00:03:32,000 --> 00:03:35,000
depends upon where you are.
取决于你在哪里

56
00:03:35,000 --> 00:03:39,000
If you are in the first or the third quadrant,
如果在第一或第三象限

57
00:03:39,000 --> 00:03:41,000
then both <i>x</i> and <i>y</i> are the same sign,
那么<i>x</i>和<i>y</i>都是同一个符号

58
00:03:41,000 --> 00:03:43,000
so you have positive slopes,
所以具有正斜率

59
00:03:43,000 --> 00:03:46,000
and just the opposite happens in the other two quadrants.
而其他两个象限的情况刚好相反

60
00:03:46,000 --> 00:03:50,000
If you want the particular solution <i>y</I>[1] = –1,
如果你想要特解满足<i>y</I>[1]=-1

61
00:03:50,000 --> 00:03:52,000
you plug that over here in StreamPoints
可以把它带入到StreamPoints里

62
00:03:52,000 --> 00:03:56,000
and you get back the plot for that particular curve.
然后就可以得到这条特定曲线的图像

63
00:03:57,000 --> 00:04:02,000
Okay. Now in practice, you might just want to estimate
实践中 你可能只是想估算一下

64
00:04:02,000 --> 00:04:04,000
the solution for a differential equation,
微分方程的解

65
00:04:04,000 --> 00:04:07,000
and that can be done with Euler’s method.
这一点可以用欧拉的方法来完成

66
00:04:07,000 --> 00:04:09,000
The idea is this.
这想法是这样的

67
00:04:09,000 --> 00:04:11,000
Here’s the same example from the introduction,
这是介绍中的例子

68
00:04:11,000 --> 00:04:13,000
and you want to find the value at 2
而你想求 函数在<i>y</i>=2时的值

69
00:04:13,000 --> 00:04:17,000
starting with the value at 1 equal to 0.
已知条件是 <i>y</i>=1处的值等于0

70
00:04:17,000 --> 00:04:21,000
What you do is you start with (1, 0)
你要做的是 从（1,0）开始

71
00:04:21,000 --> 00:04:25,000
and plug it in the slope over here, so the slope is –1.
并把它带入这边的斜率 斜率是-1

72
00:04:25,000 --> 00:04:30,000
Then write down the linear approximation, which is <i>y</i> = –(<i>x</i> – 1).
然后写下线性近似值 即<i>y</i>=-(<i>x</i>-1)

73
00:04:30,000 --> 00:04:35,000
If you plug in 2, then the approximate value is –1.
如果你带入2 那么近似值就是-1

74
00:04:36,000 --> 00:04:38,000
But of course what you could do is
当然 你可以

75
00:04:38,000 --> 00:04:40,000
you could go off a little bit on the tangent line,
在切线上移动更短的距离

76
00:04:40,000 --> 00:04:42,000
then change direction,
然后改变方向

77
00:04:42,000 --> 00:04:46,000
and then that will give you a better approximation.
这会给你更好的近似值

78
00:04:46,000 --> 00:04:50,000
For example, you could go halfway from 1 to 2 up to 1.5,
比如说 你可以从1到2的一半 1.5

79
00:04:50,000 --> 00:04:55,000
and then you could change your direction with the new slope,
然后用新的斜率改变方向

80
00:04:55,000 --> 00:04:58,000
and you get a better approximation
你会得到一个更好的近似值

81
00:04:58,000 --> 00:05:00,000
from the linear approximation over here,
相较于这里的线性近似

82
00:05:00,000 --> 00:05:04,000
and you get back the solution at 2 to be –0.125.
你得到的解 在时2的值是-0.125

83
00:05:06,000 --> 00:05:09,000
Here’s the idea behind Euler’s method.
这就是欧拉方法的理念

84
00:05:09,000 --> 00:05:12,000
The idea is that when you take very short steps along tangent lines,
当你沿着切线走很短的步子

85
00:05:12,000 --> 00:05:15,000
you get much better estimates.
你会得到更好的估计值

86
00:05:15,000 --> 00:05:17,000
Basically what you’ll do is
基本上来说 你要做的是

87
00:05:17,000 --> 00:05:19,000
you’ll use an equation of this type over here
用类似这样的公式来计算

88
00:05:19,000 --> 00:05:24,000
where every value of <i>y</i> depends upon the previous value.
其中 <i>y</i>的每个值都取决于前一个值

89
00:05:24,000 --> 00:05:30,000
Here’s a visual for the case where <i>y</i>' = <i>y</i> and <i>y</i>[0] = 1.
这是<i>y</i>'=<i>y</i>和<i>y</i>[0]=1的情况下的可视化

90
00:05:30,000 --> 00:05:34,000
Of course in this case, the exact solution is just <i>e</I>^<i>x</i>
当然 在这种情况下精确的解是<i>e</I>^<i>x</i>

91
00:05:34,000 --> 00:05:37,000
because its derivative is itself.
因为它的导数就是自己

92
00:05:37,000 --> 00:05:41,000
If you have only one point, then you get back just a tangent line,
如果你只有一个点 那么你得到的只是一条切线

93
00:05:41,000 --> 00:05:43,000
the red line over here.
就是这条红线

94
00:05:43,000 --> 00:05:47,000
If you take two points, you go halfway down,
如果你走两步 就要在中间暂停

95
00:05:47,000 --> 00:05:51,000
then you change direction and you get a better approximation.
然后改变方向 得到一个更好的近似值

96
00:05:51,000 --> 00:05:54,000
Then of course you could take three points, four points, et cetera.
当然 你可以三等分 四等分 等等

97
00:05:54,000 --> 00:05:57,000
By the time we get to ten points like the green line over here,
这边的绿线显示了具有十个中间点的情况

98
00:05:57,000 --> 00:06:00,000
then you get a really nice approximation.
你就得到了一个非常好的近似值

99
00:06:00,000 --> 00:06:05,000
Of course the top-most graph is the actual solution.
当然最上面的曲线是微分方程实际的解

100
00:06:05,000 --> 00:06:09,000
With Euler’s method, the approximation improves
欧拉法的近似度可以不断提高

101
00:06:09,000 --> 00:06:12,000
as you take more and more points.
只要你选取越来越多的中间点

102
00:06:12,000 --> 00:06:16,000
You have one point, then two points, then ten points
一个点 然后两个点 乃至十个点

103
00:06:16,000 --> 00:06:20,000
and then you get closer and closer to the solution.
你会越来越接近真实解

104
00:06:20,000 --> 00:06:26,000
Now Euler’s method relies on so-called recurrence relations.
欧拉的方法依靠的是所谓的递归关系

105
00:06:26,000 --> 00:06:27,000
What’s that?
那是什么？

106
00:06:27,000 --> 00:06:32,000
Well, here’s the relation for Euler’s method, and what happens is
嗯 这里就是欧拉的实际计算方法 例如说

107
00:06:32,000 --> 00:06:37,000
let’s say you want to find the value of <i>y</i>2—so <i>n</i> is 2.
假设你想求<i>y</i>2——<i>n</i>的值是2

108
00:06:37,000 --> 00:06:41,000
Then that depends upon <i>y</i>1 and <i>x</i>1.
所以<i>y</i>2取决于<i>y</i>1和<i>x</i>1

109
00:06:41,000 --> 00:06:47,000
You need <i>x</I>1 and <I>y</i>1 to work out the value of <i>y</i>2.
你需要<i>x</I>1和<I>y</i>1来计算<i>y</i>2的值

110
00:06:47,000 --> 00:06:50,000
Then you say I don’t know the value of <i>y</i>1,
有人肯定会说 我不知道<i>y</i>1的值

111
00:06:50,000 --> 00:06:56,000
so to find the value of <I>y</i>1, you need the value of <i>x</i>0 and <i>y</i>0.
所以要求<I>y</i>1的值 需要<i>x</i>0和<i>y</i>0的值

112
00:06:56,000 --> 00:06:59,000
But of course, those are just the initial conditions.
显然 这些就是初始条件

113
00:06:59,000 --> 00:07:03,000
In practice, if you want to find, let’s say, <i>y</i>100,
实际情况下 如果你想求 比方说 <i>y</i>100

114
00:07:03,000 --> 00:07:05,000
you need to go around all the way to 0,
你就得一个个求到0

115
00:07:05,000 --> 00:07:08,000
and that’s of course a very tiresome thing to do by hand.
当然对于手算来说这是非常烦人的

116
00:07:08,000 --> 00:07:12,000
On the other hand, it’s a perfect thing to do by computer,
但使用电脑来做 就非常完美了

117
00:07:12,000 --> 00:07:15,000
so it’s very easy to program on a computer.
因为在电脑上编程计算非常容易

118
00:07:15,000 --> 00:07:19,000
After a couple of lessons, we’ll talk about how to make
接下来几节课 我们就会讲述如何编写

119
00:07:19,000 --> 00:07:23,000
a program that calculates the points from Euler’s method.
一个使用欧拉法计算点值的程序

120
00:07:25,000 --> 00:07:29,000
That’s the end of this lesson, and the main point is
这节课就此进入尾声 重点有

121
00:07:29,000 --> 00:07:31,000
you can use slope fields to visualize
你可以使用斜率场来可视化

122
00:07:31,000 --> 00:07:34,000
the behavior of differential equations.
微分方程的行为

123
00:07:34,000 --> 00:07:36,000
We have two nice functions.
我们有两个不错的函数

124
00:07:36,000 --> 00:07:41,000
We have VectorPlot and we have StreamPlot to plot these slope fields.
VectorPlot和StreamPlot 可以来绘制这些坡度场

125
00:07:41,000 --> 00:07:43,000
You can use Euler’s method
你可以用欧拉法

126
00:07:43,000 --> 00:07:46,000
to estimate the solution at various points,
来估计各点的近似值

127
00:07:46,000 --> 00:07:49,000
and because that’s rather tedious to do,
虽然手算相当乏味

128
00:07:49,000 --> 00:07:51,000
we can actually program it with a computer,
但我们可以用电脑编程解决

129
00:07:51,000 --> 00:07:53,000
but that you’ll learn very soon.
你很快就会学到这些内容

130
00:07:53,000 --> 00:07:57,000
The next lesson is about separable differential equations.
下节课讲的是可分离变量的微分方程

131
00:07:57,000 --> 00:07:59,000
Before we do that, do review today’s lesson.
在这之前 记得先复习一下今天的课程

132
00:07:59,000 --> 00:08:03,000
It’s an important lesson for differential equations.
这是微分方程的重要一课

133
00:08:03,000 --> 00:08:06,000
I’ll stop over here. Thank you very much.
这节课到这就结束了 谢谢观看
(翻译 华东理工大学 吴宇迪 校译 氘化氢)
